buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 allout58
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

//apply plugin: 'checkstyle'

boolean fullbuild=true

version = "1.0.0rev1"
group = "allout58.techtreecraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TechTreeCraft"
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.2.1240"
    runDir = "run"

    // replacing
    replace "@MC_VERSION@", project.minecraft.version
    replace "@VERSION@", project.version
}

if (System.getenv()['BUILD_NUMBER']) {
    version += "-jnks" + System.getenv()['BUILD_NUMBER']
    fullbuild=false
}

if(System.getenv().DRONE_BUILD_NUMBER)
{
	version += "-droneio"+System.getenv().DRONE_BUILD_NUMBER
    fullbuild=false
}

repositories{
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven"
	}

}
dependencies {
    compile "mcp.mobius.waila:Waila:1.5.8a_1.7.10:dev"
}

ext.fmlManifest = manifest {
    attributes("FMLCorePlugin": "allout58.mods.techtree.TechTreeModCorePlugin", "FMLCorePluginContainsFMLMod": "true")
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// change the name of my obfuscated jar
jar {
    classifier = 'universal'
}

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'src'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}


artifacts {
    if(fullbuild)
    {
        archives sourceJar
        archives deobfJar
        archives javadocJar
    }
}